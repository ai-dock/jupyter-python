name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  LATEST_CUDA: "all-cuda-11.8.0-cudnn8-runtime-22.04"
  LATEST_ROCM: "all-rocm-5.4.2-runtime-22.04"
  LATEST_CPU: "all-cpu-22.04"

jobs:
  cpu-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["2.7", "python_27"]
          - ["3.8", "python_38"]
          - ["3.9", "python_39"]
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["all", "python_311"]
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-cpu-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CPU }} ]]; then
              TAGS="${img_path}:latest-cpu, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python[0] }}-cpu-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
            MAMBA_DEFAULT_ENV=${{ matrix.python[1] }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["2.7", "python_27"]
          - ["3.8", "python_38"]
          - ["3.9", "python_39"]
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["all", "python_311"]
        cuda:
          - 11.7.1
          - 11.8.0
          - 12.1.0
          - 12.2.0
        level:
          - "base"
          - "runtime"
          - "devel"
          - "cudnn8-runtime"
          - "cudnn8-devel"
        exclude:
          - cuda: 12.2.0
            level: "cudnn8-runtime" # Not yet available
          - cuda: 12.2.0
            level: "cudnn8-devel" # Not yet available
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CUDA }} ]]; then
              TAGS="${img_path}:latest, ${img_path}:latest-cuda, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python[0] }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
            MAMBA_DEFAULT_ENV=${{ matrix.python[1] }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - ["2.7", "python_27"]
          - ["3.8", "python_38"]
          - ["3.9", "python_39"]
          - ["3.10", "python_310"]
          - ["3.11", "python_311"]
          - ["all", "python_311"]
        rocm:
          - 5.4.2
          - 5.6
        level:
          - "core"
          - "runtime"
          - "devel"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.python[0] }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_ROCM }} ]]; then
              TAGS="${img_path}:latest-rocm, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python[0] }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ matrix.python[0] }}
            PYTHON_MAMBA_NAME=${{ matrix.python[1] }}
            MAMBA_DEFAULT_ENV=${{ matrix.python[1] }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}